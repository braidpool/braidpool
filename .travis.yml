sudo:
    - false

language:
    - cpp

compiler:
    - gcc

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial main'
              key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
        packages:
            - cmake

before_install:

    # Set aliases for readability.
    - if [[ $CC             == gcc     ]]; then GCC=true; fi
    - if [[ $CC             == clang   ]]; then CLANG=true; fi
    - if [[ $LINK           == static  ]]; then STATIC=true; fi
    - if [[ $LINK           == dynamic ]]; then DYNAMIC=true; fi
    - if [[ $TRAVIS_OS_NAME == osx     ]]; then OSX=true; fi
    - if [[ $TRAVIS_OS_NAME == linux   ]]; then LINUX=true; fi

install:

    # Export CC/CXX to control compiler/version.
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then export CC=clang; export CXX=clang++; fi
    - if [[ $OSX   && $CLANG && $STATIC  ]]; then export CC=clang; export CXX=clang++; fi
    - if [[ $LINUX && $CLANG && $DYNAMIC ]]; then export CC=clang; export CXX=clang++; fi
    - if [[ $LINUX && $CLANG && $STATIC  ]]; then export CC=clang-5.0; export CXX=clang++-5.0; fi
    - if [[ $LINUX && $GCC   && $DYNAMIC ]]; then export CC=gcc-4.8; export CXX=g++-4.8; fi
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then export CC=gcc; export CXX=g++; fi
    # Download and build libbitcoin-database and all dependencies.
    - git clone https://github.com/libbitcoin/libbitcoin-system.git
    - cd libbitcoin-system
    - CC=$CC CXX=$CXX ./install.sh --enable-isystem --disable-static --build-boost --prefix=$TRAVIS_BUILD_DIR/my-prefix CFLAGS='-Os -s' CXXFLAGS='-Os -s'

script:

    - cd $TRAVIS_BUILD_DIR
    - mkdir channels/build
    - cd channels/build
    - PKG_CONFIG_PATH=$TRAVIS_BUILD_DIR/my-prefix/lib/pkgconfig/ cmake ../
    - cmake --build .
    - make test

# after_success:

#     # Download and unpack lcov.
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then wget https://github.com/linux-test-project/lcov/releases/download/v1.12/lcov-1.12.tar.gz; fi
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then tar xzf lcov-1.12.tar.gz; fi
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then cd lcov-1.12; PREFIX="$TRAVIS_BUILD_DIR/my-prefix" make install; cd ..; fi

#     # Install coveralls.
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then gem install coveralls-lcov; fi

#     # Capture coverage info, filter out system and test code, and debug before upload.
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then $TRAVIS_BUILD_DIR/my-prefix/usr/bin/lcov --directory . --capture --output-file coverage.info; fi
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then $TRAVIS_BUILD_DIR/my-prefix/usr/bin/lcov --remove coverage.info "/usr/*" "$TRAVIS_BUILD_DIR/my-prefix/*" "my-build/*" "test/*" "tools/initchain/*" --output-file coverage.info; fi
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then $TRAVIS_BUILD_DIR/my-prefix/usr/bin/lcov --list coverage.info; fi

#     # Upload coverage info to coveralls service (--repo-token <private coveralls repo token>).
#     - if [[ $LINUX && $GCC   && $STATIC  ]]; then coveralls-lcov coverage.info; fi


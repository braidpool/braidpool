name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CORES: 2

jobs:
  build:
    runs-on: ubuntu-22.04
  
    steps:
    - uses: actions/checkout@v2

    - name: Checkout libbitcoin system
      id: checkout-libbitcoin
      run: |
        git clone --depth 1 --branch master https://github.com/pool2win/libbitcoin-system.git
        cd libbitcoin-system
        echo "::set-output name=commit_id::`git log -n 1 --pretty=format:"%H"`"

    - name: Build boost 1.79
      run: |
        cd /tmp
        wget http://downloads.sourceforge.net/project/boost/boost/1.79.0/boost_1_79_0.tar.gz
        tar -zxf boost_1_79_0.tar.gz
        cd boost_1_79_0
        ./bootstrap.sh --with-toolset=clang
        sudo ./b2 cxxflags="-std=c++11 -stdlib=libc++ -w" linkflags="-stdlib=libc++ -nodefaultlibs -lc++ -lc++abi -lm -lc -lgcc_s -lpthread" --layout=system -j ${{env.CORES}} toolset=clang install

    - name: Install msgpack
      run: |
        git clone https://github.com/msgpack/msgpack-c.git
        cd msgpack-c
        git checkout cpp_master
        cmake .
        sudo cmake --build . --target install

    - name: Build secp256k1
      run: |
        git clone --depth 1 --branch version8 --single-branch https://github.com/libbitcoin/secp256k1
        cd secp256k1
        ./autogen.sh
        ./configure --disable-tests --enable-module-recovery
        make
        sudo make install
        cd ${{github.workspace}}
      env:
        CC: clang
        CXX: clang++

    - name: Build libbitcoin-system
      run: |
        cd libbitcoin-system
        cd builds/cmake
        cmake -DBUILD_SHARED_LIBS=true -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS="-std=c++20 -stdlib=libc++" -DCMAKE_EXE_LINKER_FLAGS=-lc++abi
        make -j ${{env.CORES}}
        sudo make install
        sudo ldconfig
            
    - name: Channels - Configure CMake
      run: |
        cmake -DBOOST_ROOT=/usr/local/ -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -S ${{github.workspace}}/channels -B ${{github.workspace}}/channels/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS="-std=c++20 -stdlib=libc++" -DCMAKE_EXE_LINKER_FLAGS=-lc++abi
        
    - name: Channels - Build CMake
      run: |
        CMAKE_BUILD_PARALLEL_LEVEL=${{env.CORES}} cmake --build ${{github.workspace}}/channels/build
        
    - name: Channels - Run tests
      run: ctest --test-dir ${{github.workspace}}/channels/build

    - name: Pool - Configure CMake
      run: |
        cmake -DBOOST_ROOT=/usr/local/ -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -S ${{github.workspace}}/pool -B ${{github.workspace}}/pool/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}  -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS="-std=c++20 -stdlib=libc++" -DCMAKE_EXE_LINKER_FLAGS=-lc++abi

    - name: Pool - Build CMake
      run: |
        CMAKE_BUILD_PARALLEL_LEVEL=${{env.CORES}} cmake --build ${{github.workspace}}/pool/build

    - name: Pool - Run tests
      run: ctest --test-dir ${{github.workspace}}/pool/build
